const { SlashCommandBuilder } = require('@discordjs/builders')

module.exports = {
    data: new SlashCommandBuilder()
        .setName("russia")
        .setDescription('–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–ª–∞–≥ –†–æ—Å—Å–∏–∏')
        .addIntegerOption(option => option.setName("x").setDescription("–®–∏—Ä–∏–Ω–∞ —Ñ–ª–∞–≥–∞ (–ö–∞–∂–¥–æ–µ 1 = 1 —Å–º–∞–π–ª–∏–∫ –≤ —à–∏—Ä–∏–Ω—É —Ñ–ª–∞–≥–∞)").setRequired(true))
        .addIntegerOption(option => option.setName("y").setDescription("–í—ã—Å–æ—Ç–∞ —Ñ–ª–∞–≥–∞ (–ö–∞–∂–¥–æ–µ 1 = 1 —Å–º–∞–π–ª–∏–∫ –≤ –≤—ã—Å–æ—Ç—É —Ñ–ª–∞–≥–∞)").setRequired(true)),
    async execute(interaction) {
        const option = interaction.options;
            if (20 < option.getInteger("x") || option.getInteger("x") <= 0 || 0 >= option.getInteger("y") || option.getInteger("y") > 20) {
                return interaction.reply({content: "–¢–≤–æ–π —Ñ–ª–∞–≥ –†–æ—Å—Å–∏–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å", ephemeral: true}) 
            } else {
                return interaction.reply({
                        content: Array.from("‚¨úüü¶üü•")
                            .reduce((acc, x) => 
                                acc.concat([`${x.repeat(option.getInteger("x")) + '\n'}`.repeat(option.getInteger("y"))]),
                            []).join('')
            })
        }
    }
}