const { SlashCommandBuilder } = require("@discordjs/builders");
const { MessageEmbed, MessageActionRow, MessageButton } = require("discord.js");

const actions = new MessageActionRow()
    .addComponents(
        done = new MessageButton()
            .setLabel("–ü—Ä–∏–Ω—è—Ç—å")
            .setCustomId("done")
            .setStyle("SUCCESS"),
        new MessageButton()
            .setLabel("–û—Ç–∫–ª–æ–Ω–∏—Ç—å")
            .setCustomId("cancel")
            .setStyle("DANGER")
    )

module.exports = {
    data: new SlashCommandBuilder()
        .setName("mem")
        .setDescription("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –º–µ–º –≤ #‚îåüìΩ„Éª–ª–µ–Ω—Ç–∞")
        .addAttachmentOption(option => option.setName("attachment").setDescription("–ö–∞–∫–æ–π –º–µ–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å?").setRequired(true))
        .addStringOption(option => option.setName("description").setDescription("–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –º–µ–º–∞")),
    async execute(interaction, client) {
        const attachment = interaction.options.getAttachment("attachment").url
        const description = interaction.options.getString("description")

        if (description?.length >= 1024) return interaction.reply({content: `–û–ø–∏—Å–∞–Ω–∏–µ –º–µ–º–∞ –Ω–µ –±–æ–ª—å—à–µ 1024 —Å–∏–º–≤–æ–ª–æ–≤`, ephemeral: true})

        interaction.reply({
            embeds: [
                new MessageEmbed()
                    .setTitle(`**‚úîÔ∏è | –í–∞—à –º–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É**`)
                    .setColor("#22c9e6")
                    .setDescription(`${description || ""}`)
                    .setImage(`${attachment}`)
            ], ephemeral: true})

        const message = await client.channels.cache.get("976172721148944424").send({
            content: `<@&876059285593935922>, <@&876059772208709652>`,
            embeds: [new MessageEmbed()
                .setTitle(`üö¨ **| –ü—Ä–µ–¥–ª–æ–∂–µ–Ω –º–µ–º –æ—Ç ${interaction.user.tag}**`)
                .setColor("#22c9e6")
                .addFields({ name: "**–ï–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ:**", value: `${description || "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}`, inline: false })
                .setImage(`${attachment}`)
            ], fetchReply: true, components: [actions]})

        const collector = message.createMessageComponentCollector({ 
            componentType: 'BUTTON',
            errors: ['time']
        });

        collector.on("collect", async (i) => {
            if (i.customId === "done") {
                i.update({
                    content: `<@&876059285593935922>, <@&876059772208709652>`,
                    embeds: [new MessageEmbed()
                        .setTitle(`üö¨ **| –ü—Ä–µ–¥–ª–æ–∂–µ–Ω –º–µ–º –æ—Ç ${interaction.user.tag}**`)
                        .setColor("#22c9e6")
                        .addFields({ name: "**–ï–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ:**", value: `${description || "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}`, inline: false })
                        .setImage(`${attachment}`)],  
                    components: [new MessageActionRow()
                        .addComponents(
                            new MessageButton()
                                .setLabel(`–ü—Ä–∏–Ω—è—Ç–æ (–æ—Ç ${i.user.tag})`)
                                .setStyle("SUCCESS")
                                .setDisabled(true)
                                .setCustomId("done_xd"))
                        ],
                    fetchReply: true,
                })
                client.channels.cache.get("936661386019340348").send({
                    embeds: [
                        new MessageEmbed()
                            .setTitle(`**–ú–µ–º –æ—Ç ${interaction.user.tag}**`)
                            .addFields({ name: "**–ï–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ:**", value: `${description || "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}`, inline: false })
                            .setImage(`${attachment}`)
                            .setColor("RANDOM")
                    ]
                })
                collector.stop();
            } if (i.customId === "cancel") {
                i.update({
                    content: `<@&876059285593935922>, <@&876059772208709652>`,
                    embeds: [new MessageEmbed()
                        .setTitle(`üö¨ **| –ü—Ä–µ–¥–ª–æ–∂–µ–Ω –º–µ–º –æ—Ç ${interaction.user.tag}**`)
                        .setColor("#22c9e6")
                        .addFields({ name: "**–ï–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ:**", value: `${description || "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}`, inline: false })
                        .setImage(`${attachment}`)],  
                    components: [new MessageActionRow()
                        .addComponents(
                            new MessageButton()
                                .setLabel(`–û—Ç–∫–ª–æ–Ω–µ–Ω–æ (–æ—Ç ${i.user.tag})`)
                                .setStyle("DANGER")
                                .setDisabled(true)
                                .setCustomId("done_xd"))
                        ],
                    fetchReply: true,
                })
                collector.stop();
            }
        })
    }
}