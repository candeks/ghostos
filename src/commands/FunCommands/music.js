const { SlashCommandBuilder } = require('@discordjs/builders')
const play = require('play-dl')
const { createAudioPlayer, createAudioResource, joinVoiceChannel, NoSubscriberBehavior } = require('@discordjs/voice')
const { MessageEmbed, MessageActionRow, MessageButton } = require('discord.js')

module.exports = {
    data: new SlashCommandBuilder()
            .setName("music")
            .setDescription("–í–∫–ª—é—á–∏—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–≤–æ–π —Ç—Ä–µ–∫ –≤ voice –∫–∞–Ω–∞–ª–µ")
            .addStringOption(option => option.setName("track").setDescription("–ù–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –º—É–∑—ã–∫—É —Å —é—Ç—É–±–∞").setRequired(true)),
        async execute(interaction, client) {
            const buttons = new MessageActionRow()
                .addComponents(
                    new MessageButton()
                        .setStyle("SUCCESS")
                        .setLabel("–ü—Ä–∏–±–∞–≤–∏—Ç—å –Ω–∞ 10%")
                        .setCustomId(">")
                        .setEmoji("<a:partytime:852872623658762240>"),
                    new MessageButton()
                        .setStyle("DANGER")
                        .setLabel("–£–±–∞–≤–∏—Ç—å –Ω–∞ 10%")
                        .setCustomId("<"))
                const progress = new MessageActionRow() 
                    .addComponents(
                        bar = new MessageButton()
                            .setLabel("–≠—Ç–æ—Ç –º—É–∑–æ–Ω –Ω–µ –≤ –∫—ç—à–µ –±–æ—Ç–∞")
                            .setStyle("SECONDARY")
                            .setCustomId("bar")
                            .setDisabled(false)) 
            const track = interaction.options.getString("track")
                if (interaction.member.voice?.channelId === "980197496334725151") {
                    await interaction.deferReply()
                        try {
                            const channel = await client.channels.fetch("980197496334725151")
                            let volume = 1;
                            let user_volume = "";
                            let index_first = 10;
                            let index_last = 10;

                            const connection = joinVoiceChannel({
                                channelId: "980197496334725151",
                                guildId: interaction.guild.id, 
                                adapterCreator: interaction.guild.voiceAdapterCreator,
                                selfMute: false,
                                selfDeaf: false
                            })

                            const search = await play.search(track, { 
                                limit: 1
                            }) 

                            const stream = await play.stream(search[0].url)

              
                            const resource = createAudioResource(stream.stream, {
                                inputType: stream.type, 
                                inlineVolume: true
                            }) 
              
                            const player = createAudioPlayer({
                                behaviors: {
                                    noSubscriber: NoSubscriberBehavior.Play
                                }
                            })
                            let time = 0;

                            const music = await play.video_info(search[0].url)
                            
                            if (music.video_details.durationRaw === "00:00") {
                                time = 7200 * 1000
                            } else {
                                time = music.video_details.durationInSec * 1000
                            } 

                            const text = `\n\n**–ê–≤—Ç–æ—Ä:** ${music.video_details.channel}\n**–í—Ä–µ–º—è:** \`${music.video_details.durationRaw}\`\n**–õ–∞–π–∫–æ–≤:** ${music.video_details.likes}\n**–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤:** ${music.video_details.views}\n**–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:** ${music.video_details.uploadedAt}\n\n`
                            const user_hex = (await client.users.fetch(interaction.user.id, {force: true})).hexAccentColor
                            const message = await interaction.editReply({embeds: [
                                                new MessageEmbed()
                                                    .setTitle(`**üéµ | –ò–≥—Ä–∞–µ—Ç –≤ ${channel.name}**`)
                                                    .setDescription(`**[${music.video_details.title}](${music.video_details.url})**`)
                                                    .setThumbnail(`${music.video_details.thumbnails[0].url}`)
                                                    .addFields({ name: "**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º—É–∑—ã–∫–µ:**", value: text, inline: false })
                                                    .setColor(user_hex)
                                                ], components: [buttons], fetchReply: true})

                            const collector = message.createMessageComponentCollector({ 
                                componentType: 'BUTTON',
                                time: time,
                                errors: ['time']
                            });

                                connection.subscribe(player)
                                interaction.guild.me.voice.setSuppressed(false).catch(() => {}); 
                                resource.volume.setVolume(volume)
                                player.play(resource)

                            collector.on('collect', async (i) => {
                                if (i.customId === "bar") {
                                        return i.update({embeds: [
                                            new MessageEmbed()
                                                .setTitle(`**üéµ | –ò–≥—Ä–∞–µ—Ç –≤ ${channel.name}**`)
                                                .setThumbnail(`${music.video_details.thumbnails[0].url}`)
                                                .setDescription(`**[${music.video_details.title}](${music.video_details.url})**`)
                                                .addFields(
                                                    { name: "**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º—É–∑—ã–∫–µ:**", value: text, inline: true},
                                                    { name: "**–û–±–Ω–æ–≤–∏–ª –≥—Ä–æ–º–∫–æ—Å—Ç—å:**", value: `${user_volume} ‚Äî ${String(Math.round(volume * 100))}%`, inline: true}
                                                )
                                                .setColor(user_hex)
                                        ], components: [progress, buttons] 
                                    })
                                }   if (i.member.voice?.channelId === "980197496334725151") {
                                        if (i.customId === ">" || i.customId === "<") { 
                                            if (i.customId === ">") {
                                                if (volume >= 2) {
                                                    return i.reply({content: "–ù–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å –±–æ–ª—å—à–µ 200%", ephemeral: true});
                                                } else {
                                                    volume += 0.1
                                                    resource.volume.setVolume(volume)
                                                    bar.setLabel( `|${"‚Äî".repeat(index_first += 1)}üîä${"‚Äî".repeat(index_last -= 1)}|`)
                                                }   
                                            } else {
                                                if (String(volume).includes("e-16")) {
                                                    return i.reply({content: "–ù–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å –º–µ–Ω—å—à–µ –Ω—É–ª—è –≥—Ä–æ–º–∫–æ—Å—Ç—å", ephemeral: true});
                                                } else {
                                                    volume -= 0.1
                                                    resource.volume.setVolume(volume)
                                                    bar.setLabel(`|${"‚Äî".repeat(index_first -= 1)}üîä${"‚Äî".repeat(index_last += 1)}|`)
                                                }
                                            }
                                
                                user_volume = i.user;
                                
                                return i.update({embeds: [
                                    new MessageEmbed()
                                        .setTitle(`**üéµ | –ò–≥—Ä–∞–µ—Ç –≤ ${channel.name}**`)
                                        .setThumbnail(`${music.video_details.thumbnails[0].url}`)
                                        .setDescription(`**[${music.video_details.title}](${music.video_details.url})**`)
                                        .addFields(
                                            { name: "**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º—É–∑—ã–∫–µ:**", value: text, inline: true},
                                            { name: "**–û–±–Ω–æ–≤–∏–ª –≥—Ä–æ–º–∫–æ—Å—Ç—å:**", value: `${user_volume} ‚Äî ${String(Math.round(volume * 100))}%`, inline: true}
                                        )
                                        .setColor(user_hex)
                                ], components: [progress, buttons] 
                            })
                        }  
                    } else {
                        return i.reply({
                            content: "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏—Ç–µ –≤ <#980197496334725151>",
                            ephemeral: true
                        })
                    }
                })  

                collector.on("end", async () => {
                    return interaction.editReply({embeds: [
                        new MessageEmbed()
                            .setTitle(`**üéµ | –ò–≥—Ä–∞–µ—Ç –≤ ${channel.name}**`)
                            .setDescription(`**[${music.video_details.title}](${music.video_details.url})**`)
                            .setThumbnail(`${music.video_details.thumbnails[0].url}`)
                            .addFields({ name: "**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º—É–∑—ã–∫–µ:**", value: text, inline: false })
                            .setColor(user_hex)
                    ], components: [] 
                }).catch(() => {});
            })
        } catch (error) {
                return interaction.editReply({
                    content: `–ù–µ –Ω–∞—à–ª–æ—Å—å ...) –ü–æ–ø—Ä–æ–±—É–π –∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫–æ–π:\n\`\`\`${error}\`\`\``
                })
            }
        } else {
            return interaction.reply({ 
                content: '–í—Å—Ç—É–ø–∏—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤ <#980197496334725151>',
                ephemeral: true
            })
        }
    }
} 